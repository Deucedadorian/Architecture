Memory:
    Bandwidth Averages:
        (Method)    (standard)      (overclocked) 
        MEMCPY	    2488.119 MiB/s  2385.866 MiB/s
        DUMB	    2489.036 MiB/s  2404.829 MiB/s
        MCBLOCK     3168.949 MiB/s  2809.739 MiB/s

    Latency:
        write speed:    
            (standard)              (overclocked)
            41.4999 s, 12.6 MB/s    37.1092 s, 14.1 MB/s

        read speed: 0.400473 s, 1.3 GB/s


Storage:
    latency:
        9 requests completed in 5.55 ms, 36 KiB read, 1.62 k iops, 6.33 MiB/s
        generated 10 requests in 9.00 s, 40 KiB, 1 iops, 4.44 KiB/s
        min/avg/max/mdev = 505.2 us / 616.9 us / 671.5 us / 66.1 us

    bandwidth: 
        write speed:    66.4651 s, 15.8 MB/s
        read speed:     0.768703 s, 1.4 GB/s
    
    
1. We didn't measure latency or bandwidth of a standard PC, but it's probable 
that a stardard PC would measure faster speeds and greater bandwidth in all cases...

2. We didn't test Wifi. We conducted all tests with a wired connection. 

3. Because bandwidth and latency of the raspberry pi is quite limited, It's use
as a web server or database would be problematic once you start throwing any
meaningful volume of web traffic or data at it.

4. As the data above shows, overclocking actually seemed to degrade performance.
specifically where bandwidth is concerned. However, write speed went up! it seems like
either there is a trade off that takes place, or overclocking makes greater improvements
to performace then downgrades, or vice versa. 
   
5. The best ways to improve performance is to create a wired connection for
networking, and stop unnecessary processes. It also seems like storage has
better read and write speeds then memory. maybe there is a way to use a part of storage
as memory?
